{
  "action": "edited",
  "changes": {
    "body": {
      "from": "Thank you Martin for thoughtful feedback.\n\n> The question is then only whether to delay (at the browser end, by serializing requests) or make requests without signatures (which will need to be retried somehow).\n\nThis is spot on and the most important point. The complexity, which you are right to point out, comes almost entirely from choosing the former approach. The reason we (Google) are proposing the former, is because we tried the latter in a few different versions, and found that every time we underestimated the server side complexity, and the difficulty of migration. \n\nIf the server has to trigger the condition \"now I require a signature\" at the moment it is needed, it turns out that it only works well for requiring signatures on certain sensitive actions, or explicit re-auth moments that are visible to the user. That (a) significantly limits how often we can observe binding signatures, and (b) requires application-level changes across the whole stack, which are infeasible. We don't think that's a Google specific problem, it's akin to requiring framework upgrades or migrations for other regular (\"second order\" in your first link) apps.\n\nWe tried implementing a \"collect a signature every 10 minutes\" type of logic in that framework. The fact that the browser will make requests without a recent proof means that any application on the domain has to be prepared to handle it, trigger a signature collection, and then retry the original request. The request that triggers it can be any type of request, a full page redirect, a load of a src attribute of an img tag, or, most frequently, an XHR, etc. Creating semantics for reasonable \"retry\" here seems infeasible, and even if it is, it will be bespoke to each application and/or framework in use.\n\nSo from our point of view, browser-initiated refreshes and holding requests until a refresh is done, is something we think is necessary for success here.\n\n>> We do not believe this scales well.\n\n> I suggest that you are criticizing an aspect of the complexity that is emergent, not inherent. \n\nI do think this is inherent. You identified one of the large issues with server-side triggered signature requirement, which is that multiple concurrent requests may prompt the server to issue multiple signature requests (e.g. redirects to endpoints with a Signed cookie, or specific XHRs, etc.). I believe that any solution this requires servers to keep consistent state across all its instances, which is very hard to scale.\n\nIn your solution in particular, which iiuc was to have those requests first go through an endpoint without a Signed cookie, that then coordinates and redirects /one/ of them to the \"real\" endpoint (one that has the Signed cookie), while somehow keeping the others pending, or redirecting/404ing them right away to whatever is appropriate. Such a redirect endpoint will need fully consistent state to make such decisions. Apologies in advance if I misunderstood your suggestion.\n\n> My first goal is to remove the reliance on the browser clock to drive refreshes. \n\nIn our proposal sites do manage when signatures are needed by telling the browser up front, via the expiration time of the short term cookie. In practice, we expect this to be measured in minutes or hours, and that sites will set this with the Max-Age attribute.  We have not seen widespread issues with clients keeping fairly good relative time on that scale. Clock drifts/changes can indeed happen, but they are rare, and when they do the remedy seems simple enough: If the browser sends a stale short-term cookie, the browser force expires it which triggers a refresh; and if the browser expires one too early then a refresh will be triggered and the server sets a new cookie.\n\n> That leaves proactive refreshes. I don't see that as viable, frankly.\n\nWe believe simple logic will be fairly effective here. Since the website has told the browser in advance when it will need signatures, via the expiration of short-term cookies, the browser has a lot of information. An example of simple logic here would be \"If requests requiring the short term cookies have been made in the last minute of its lifetime, perform a refresh 10 seconds before it expires\" (with tunable parameters).\n"
    }
  },
  "issue": {
    "url": "https://api.github.com/repos/w3ctag/design-reviews/issues/1052",
    "repository_url": "https://api.github.com/repos/w3ctag/design-reviews",
    "labels_url": "https://api.github.com/repos/w3ctag/design-reviews/issues/1052/labels{/name}",
    "comments_url": "https://api.github.com/repos/w3ctag/design-reviews/issues/1052/comments",
    "events_url": "https://api.github.com/repos/w3ctag/design-reviews/issues/1052/events",
    "html_url": "https://github.com/w3ctag/design-reviews/issues/1052",
    "id": 2861431656,
    "node_id": "I_kwDOAKfwGc6qjfto",
    "number": 1052,
    "title": "Early Design Review for Device Bound Session Credentials",
    "user": {
      "login": "drubery",
      "id": 20877435,
      "node_id": "MDQ6VXNlcjIwODc3NDM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/20877435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/drubery",
      "html_url": "https://github.com/drubery",
      "followers_url": "https://api.github.com/users/drubery/followers",
      "following_url": "https://api.github.com/users/drubery/following{/other_user}",
      "gists_url": "https://api.github.com/users/drubery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/drubery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/drubery/subscriptions",
      "organizations_url": "https://api.github.com/users/drubery/orgs",
      "repos_url": "https://api.github.com/users/drubery/repos",
      "events_url": "https://api.github.com/users/drubery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/drubery/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "labels": [
      {
        "id": 592936927,
        "node_id": "MDU6TGFiZWw1OTI5MzY5Mjc=",
        "url": "https://api.github.com/repos/w3ctag/design-reviews/labels/Progress:%20in%20progress",
        "name": "Progress: in progress",
        "color": "0bc1dd",
        "default": false,
        "description": ""
      },
      {
        "id": 1370983684,
        "node_id": "MDU6TGFiZWwxMzcwOTgzNjg0",
        "url": "https://api.github.com/repos/w3ctag/design-reviews/labels/Topic:%20security%20features",
        "name": "Topic: security features",
        "color": "3760a3",
        "default": false,
        "description": ""
      },
      {
        "id": 1370993199,
        "node_id": "MDU6TGFiZWwxMzcwOTkzMTk5",
        "url": "https://api.github.com/repos/w3ctag/design-reviews/labels/Venue:%20WebAppSec%20WG",
        "name": "Venue: WebAppSec WG",
        "color": "acc3f9",
        "default": false,
        "description": ""
      },
      {
        "id": 6914182048,
        "node_id": "LA_kwDOAKfwGc8AAAABnB4LoA",
        "url": "https://api.github.com/repos/w3ctag/design-reviews/labels/Focus:%20API%20design%20(pending)",
        "name": "Focus: API design (pending)",
        "color": "006B75",
        "default": false,
        "description": ""
      },
      {
        "id": 6914186596,
        "node_id": "LA_kwDOAKfwGc8AAAABnB4dZA",
        "url": "https://api.github.com/repos/w3ctag/design-reviews/labels/Focus:%20Web%20architecture%20(pending)",
        "name": "Focus: Web architecture (pending)",
        "color": "006B75",
        "default": false,
        "description": ""
      },
      {
        "id": 6914187678,
        "node_id": "LA_kwDOAKfwGc8AAAABnB4hng",
        "url": "https://api.github.com/repos/w3ctag/design-reviews/labels/Focus:%20Security%20(pending)",
        "name": "Focus: Security (pending)",
        "color": "006B75",
        "default": false,
        "description": ""
      },
      {
        "id": 6914189040,
        "node_id": "LA_kwDOAKfwGc8AAAABnB4m8A",
        "url": "https://api.github.com/repos/w3ctag/design-reviews/labels/Focus:%20Privacy%20(pending)",
        "name": "Focus: Privacy (pending)",
        "color": "006B75",
        "default": false,
        "description": ""
      },
      {
        "id": 8360464448,
        "node_id": "LA_kwDOAKfwGc8AAAAB8lKQQA",
        "url": "https://api.github.com/repos/w3ctag/design-reviews/labels/Agenda+",
        "name": "Agenda+",
        "color": "000000",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "jyasskin",
      "id": 83420,
      "node_id": "MDQ6VXNlcjgzNDIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/83420?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jyasskin",
      "html_url": "https://github.com/jyasskin",
      "followers_url": "https://api.github.com/users/jyasskin/followers",
      "following_url": "https://api.github.com/users/jyasskin/following{/other_user}",
      "gists_url": "https://api.github.com/users/jyasskin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jyasskin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jyasskin/subscriptions",
      "organizations_url": "https://api.github.com/users/jyasskin/orgs",
      "repos_url": "https://api.github.com/users/jyasskin/repos",
      "events_url": "https://api.github.com/users/jyasskin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jyasskin/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "martinthomson",
        "id": 67641,
        "node_id": "MDQ6VXNlcjY3NjQx",
        "avatar_url": "https://avatars.githubusercontent.com/u/67641?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinthomson",
        "html_url": "https://github.com/martinthomson",
        "followers_url": "https://api.github.com/users/martinthomson/followers",
        "following_url": "https://api.github.com/users/martinthomson/following{/other_user}",
        "gists_url": "https://api.github.com/users/martinthomson/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/martinthomson/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/martinthomson/subscriptions",
        "organizations_url": "https://api.github.com/users/martinthomson/orgs",
        "repos_url": "https://api.github.com/users/martinthomson/repos",
        "events_url": "https://api.github.com/users/martinthomson/events{/privacy}",
        "received_events_url": "https://api.github.com/users/martinthomson/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      {
        "login": "jyasskin",
        "id": 83420,
        "node_id": "MDQ6VXNlcjgzNDIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/83420?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jyasskin",
        "html_url": "https://github.com/jyasskin",
        "followers_url": "https://api.github.com/users/jyasskin/followers",
        "following_url": "https://api.github.com/users/jyasskin/following{/other_user}",
        "gists_url": "https://api.github.com/users/jyasskin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jyasskin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jyasskin/subscriptions",
        "organizations_url": "https://api.github.com/users/jyasskin/orgs",
        "repos_url": "https://api.github.com/users/jyasskin/repos",
        "events_url": "https://api.github.com/users/jyasskin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jyasskin/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      {
        "login": "lolaodelola",
        "id": 7262392,
        "node_id": "MDQ6VXNlcjcyNjIzOTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7262392?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lolaodelola",
        "html_url": "https://github.com/lolaodelola",
        "followers_url": "https://api.github.com/users/lolaodelola/followers",
        "following_url": "https://api.github.com/users/lolaodelola/following{/other_user}",
        "gists_url": "https://api.github.com/users/lolaodelola/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lolaodelola/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lolaodelola/subscriptions",
        "organizations_url": "https://api.github.com/users/lolaodelola/orgs",
        "repos_url": "https://api.github.com/users/lolaodelola/repos",
        "events_url": "https://api.github.com/users/lolaodelola/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lolaodelola/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/w3ctag/design-reviews/milestones/536",
      "html_url": "https://github.com/w3ctag/design-reviews/milestone/536",
      "labels_url": "https://api.github.com/repos/w3ctag/design-reviews/milestones/536/labels",
      "id": 12154599,
      "node_id": "MI_kwDOAKfwGc4AuXbn",
      "number": 536,
      "title": "2025-03-03-f2f-Paris",
      "description": "",
      "creator": {
        "login": "plinss",
        "id": 2699689,
        "node_id": "MDQ6VXNlcjI2OTk2ODk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2699689?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/plinss",
        "html_url": "https://github.com/plinss",
        "followers_url": "https://api.github.com/users/plinss/followers",
        "following_url": "https://api.github.com/users/plinss/following{/other_user}",
        "gists_url": "https://api.github.com/users/plinss/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/plinss/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/plinss/subscriptions",
        "organizations_url": "https://api.github.com/users/plinss/orgs",
        "repos_url": "https://api.github.com/users/plinss/repos",
        "events_url": "https://api.github.com/users/plinss/events{/privacy}",
        "received_events_url": "https://api.github.com/users/plinss/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "open_issues": 2,
      "closed_issues": 0,
      "state": "open",
      "created_at": "2025-01-13T02:03:12Z",
      "updated_at": "2025-03-21T10:15:24Z",
      "due_on": "2025-03-03T08:00:00Z",
      "closed_at": null
    },
    "comments": 12,
    "created_at": "2025-02-18T19:24:15Z",
    "updated_at": "2025-06-16T04:44:43Z",
    "closed_at": null,
    "author_association": "NONE",
    "type": null,
    "active_lock_reason": null,
    "sub_issues_summary": {
      "total": 0,
      "completed": 0,
      "percent_completed": 0
    },
    "body": "こんにちは TAG-さん!\n\nI'm requesting an early TAG design review of Device Bound Session Credentials.\n\nDevice Bound Session Credentials (DBSC) aims to reduce account hijacking caused by cookie theft. It does so by introducing a protocol and browser infrastructure to maintain and prove possession of a cryptographic key. The main challenge with cookies as an authentication mechanism is that they only lend themselves to bearer-token schemes. On desktop operating systems, application isolation is lacking and local malware can generally access anything that the browser itself can, and the browser must be able to access cookies. On the other hand, authentication with a private key allows for the use of system-level protection against key exfiltration. \n\n  - Explainer¹: https://github.com/w3c/webappsec-dbsc/blob/main/README.md\n  - User research: None\n  - Security and Privacy self-review²: https://github.com/w3c/webappsec-dbsc/blob/main/security-privacy-questionnaire.md\n  - GitHub repo: https://github.com/w3c/webappsec-dbsc/tree/main\n  - Primary contacts:\n      - Daniel Rubery (@drubery), Google, Implementer\n  - Organization/project driving the design: Google\n  - Multi-stakeholder feedback³:\n    - Chromium comments: [Intent to Prototype](https://groups.google.com/a/chromium.org/g/blink-dev/c/xvZJPpXNS8Y/m/Z1gU6U-UAAAJ) submitted without objection.\n    - Mozilla comments: https://github.com/mozilla/standards-positions/issues/912\n    - WebKit comments: https://github.com/WebKit/standards-positions/issues/281\n \nFurther details:\n\n  - [y] I have reviewed the TAG's [Web Platform Design Principles](https://www.w3.org/TR/design-principles/)\n  - The group where the incubation/design work on this is being done (or is intended to be done in the future): WebAppSec\n  - The group where standardization of this work is intended to be done (\"unknown\" if not known): unknown\n  - Existing major pieces of multi-implementer review or discussion of this design:\n  - Major unresolved issues with or opposition to this design: None so far, some small questions about the degree of device binding per platform\n  - This work is being funded by: Google\n",
    "reactions": {
      "url": "https://api.github.com/repos/w3ctag/design-reviews/issues/1052/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/w3ctag/design-reviews/issues/1052/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  "comment": {
    "url": "https://api.github.com/repos/w3ctag/design-reviews/issues/comments/2975084078",
    "html_url": "https://github.com/w3ctag/design-reviews/issues/1052#issuecomment-2975084078",
    "issue_url": "https://api.github.com/repos/w3ctag/design-reviews/issues/1052",
    "id": 2975084078,
    "node_id": "IC_kwDOAKfwGc6xVC4u",
    "user": {
      "login": "arnar",
      "id": 1498,
      "node_id": "MDQ6VXNlcjE0OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1498?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnar",
      "html_url": "https://github.com/arnar",
      "followers_url": "https://api.github.com/users/arnar/followers",
      "following_url": "https://api.github.com/users/arnar/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnar/subscriptions",
      "organizations_url": "https://api.github.com/users/arnar/orgs",
      "repos_url": "https://api.github.com/users/arnar/repos",
      "events_url": "https://api.github.com/users/arnar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnar/received_events",
      "type": "User",
      "user_view_type": "public",
      "site_admin": false
    },
    "created_at": "2025-06-16T04:42:49Z",
    "updated_at": "2025-06-16T04:45:39Z",
    "author_association": "NONE",
    "body": "Thank you Martin for thoughtful feedback.\n\n> The question is then only whether to delay (at the browser end, by serializing requests) or make requests without signatures (which will need to be retried somehow).\n\nThis is spot on and the most important point. The complexity, which you are right to point out, comes almost entirely from choosing the former approach. The reason we (Google) are proposing the former, is because we tried the latter in a few different versions, and found that every time we underestimated the server side complexity, and the difficulty of migration. \n\nIf the server has to trigger the condition \"now I require a signature\" at the moment it is needed, it turns out that it only works well for requiring signatures on certain sensitive actions, or explicit re-auth moments that are visible to the user. That (a) significantly limits how often we can observe binding signatures, and (b) requires application-level changes across the whole stack, which are infeasible. We don't think that's a Google specific problem, it's akin to requiring framework upgrades or migrations for other regular (\"second order\" in your first link) apps.\n\nWe tried implementing a \"collect a signature every 10 minutes\" type of logic in that framework. The fact that the browser will make requests without a recent proof means that any application on the domain has to be prepared to handle it, trigger a signature collection, and then retry the original request. The request that triggers it can be any type of request, a full page redirect, a load of a src attribute of an img tag, or, most frequently, an XHR, etc. Creating semantics for reasonable \"retry\" here seems infeasible, and even if it is, it will be bespoke to each application and/or framework in use.\n\nSo from our point of view, browser-initiated refreshes and holding requests until a refresh is done, is something we think is necessary for success here.\n\n>> We do not believe this scales well.\n\n> I suggest that you are criticizing an aspect of the complexity that is emergent, not inherent. \n\nI do think this is inherent. You identified one of the large issues with server-side triggered signature requirement, which is that multiple concurrent requests may prompt the server to issue multiple signature requests (e.g. redirects to endpoints with a Signed cookie, or specific XHRs, etc.). I believe that any solution to this requires servers to keep consistent state across all its instances, which is very hard to scale.\n\nIn your solution in particular, which iiuc was to have those requests first go through an endpoint without a Signed cookie, that then coordinates and redirects /one/ of them to the \"real\" endpoint (one that has the Signed cookie), while somehow keeping the others pending, or redirecting/404ing them right away to whatever is appropriate. Such a redirect endpoint will need fully consistent state to make such decisions. Apologies in advance if I misunderstood your suggestion.\n\n> My first goal is to remove the reliance on the browser clock to drive refreshes. \n\nIn our proposal sites do manage when signatures are needed by telling the browser up front, via the expiration time of the short term cookie. In practice, we expect this to be measured in minutes or hours, and that sites will set this with the Max-Age attribute.  We have not seen widespread issues with clients keeping fairly good relative time on that scale. Clock drifts/changes can indeed happen, but they are rare, and when they do the remedy seems simple enough: If the browser sends a stale short-term cookie, the browser force expires it which triggers a refresh; and if the browser expires one too early then a refresh will be triggered and the server sets a new cookie.\n\n> That leaves proactive refreshes. I don't see that as viable, frankly.\n\nWe believe simple logic will be fairly effective here. Since the website has told the browser in advance when it will need signatures, via the expiration of short-term cookies, the browser has a lot of information. An example of simple logic here would be \"If requests requiring the short term cookies have been made in the last minute of its lifetime, perform a refresh 10 seconds before it expires\" (with tunable parameters).\n",
    "reactions": {
      "url": "https://api.github.com/repos/w3ctag/design-reviews/issues/comments/2975084078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  "repository": {
    "id": 11005977,
    "node_id": "MDEwOlJlcG9zaXRvcnkxMTAwNTk3Nw==",
    "name": "design-reviews",
    "full_name": "w3ctag/design-reviews",
    "private": false,
    "owner": {
      "login": "w3ctag",
      "id": 3874462,
      "node_id": "MDEyOk9yZ2FuaXphdGlvbjM4NzQ0NjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3874462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/w3ctag",
      "html_url": "https://github.com/w3ctag",
      "followers_url": "https://api.github.com/users/w3ctag/followers",
      "following_url": "https://api.github.com/users/w3ctag/following{/other_user}",
      "gists_url": "https://api.github.com/users/w3ctag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/w3ctag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/w3ctag/subscriptions",
      "organizations_url": "https://api.github.com/users/w3ctag/orgs",
      "repos_url": "https://api.github.com/users/w3ctag/repos",
      "events_url": "https://api.github.com/users/w3ctag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/w3ctag/received_events",
      "type": "Organization",
      "user_view_type": "public",
      "site_admin": false
    },
    "html_url": "https://github.com/w3ctag/design-reviews",
    "description": "W3C specs and API reviews ",
    "fork": false,
    "url": "https://api.github.com/repos/w3ctag/design-reviews",
    "forks_url": "https://api.github.com/repos/w3ctag/design-reviews/forks",
    "keys_url": "https://api.github.com/repos/w3ctag/design-reviews/keys{/key_id}",
    "collaborators_url": "https://api.github.com/repos/w3ctag/design-reviews/collaborators{/collaborator}",
    "teams_url": "https://api.github.com/repos/w3ctag/design-reviews/teams",
    "hooks_url": "https://api.github.com/repos/w3ctag/design-reviews/hooks",
    "issue_events_url": "https://api.github.com/repos/w3ctag/design-reviews/issues/events{/number}",
    "events_url": "https://api.github.com/repos/w3ctag/design-reviews/events",
    "assignees_url": "https://api.github.com/repos/w3ctag/design-reviews/assignees{/user}",
    "branches_url": "https://api.github.com/repos/w3ctag/design-reviews/branches{/branch}",
    "tags_url": "https://api.github.com/repos/w3ctag/design-reviews/tags",
    "blobs_url": "https://api.github.com/repos/w3ctag/design-reviews/git/blobs{/sha}",
    "git_tags_url": "https://api.github.com/repos/w3ctag/design-reviews/git/tags{/sha}",
    "git_refs_url": "https://api.github.com/repos/w3ctag/design-reviews/git/refs{/sha}",
    "trees_url": "https://api.github.com/repos/w3ctag/design-reviews/git/trees{/sha}",
    "statuses_url": "https://api.github.com/repos/w3ctag/design-reviews/statuses/{sha}",
    "languages_url": "https://api.github.com/repos/w3ctag/design-reviews/languages",
    "stargazers_url": "https://api.github.com/repos/w3ctag/design-reviews/stargazers",
    "contributors_url": "https://api.github.com/repos/w3ctag/design-reviews/contributors",
    "subscribers_url": "https://api.github.com/repos/w3ctag/design-reviews/subscribers",
    "subscription_url": "https://api.github.com/repos/w3ctag/design-reviews/subscription",
    "commits_url": "https://api.github.com/repos/w3ctag/design-reviews/commits{/sha}",
    "git_commits_url": "https://api.github.com/repos/w3ctag/design-reviews/git/commits{/sha}",
    "comments_url": "https://api.github.com/repos/w3ctag/design-reviews/comments{/number}",
    "issue_comment_url": "https://api.github.com/repos/w3ctag/design-reviews/issues/comments{/number}",
    "contents_url": "https://api.github.com/repos/w3ctag/design-reviews/contents/{+path}",
    "compare_url": "https://api.github.com/repos/w3ctag/design-reviews/compare/{base}...{head}",
    "merges_url": "https://api.github.com/repos/w3ctag/design-reviews/merges",
    "archive_url": "https://api.github.com/repos/w3ctag/design-reviews/{archive_format}{/ref}",
    "downloads_url": "https://api.github.com/repos/w3ctag/design-reviews/downloads",
    "issues_url": "https://api.github.com/repos/w3ctag/design-reviews/issues{/number}",
    "pulls_url": "https://api.github.com/repos/w3ctag/design-reviews/pulls{/number}",
    "milestones_url": "https://api.github.com/repos/w3ctag/design-reviews/milestones{/number}",
    "notifications_url": "https://api.github.com/repos/w3ctag/design-reviews/notifications{?since,all,participating}",
    "labels_url": "https://api.github.com/repos/w3ctag/design-reviews/labels{/name}",
    "releases_url": "https://api.github.com/repos/w3ctag/design-reviews/releases{/id}",
    "deployments_url": "https://api.github.com/repos/w3ctag/design-reviews/deployments",
    "created_at": "2013-06-27T19:37:14Z",
    "updated_at": "2025-06-10T06:35:02Z",
    "pushed_at": "2025-06-10T01:02:17Z",
    "git_url": "git://github.com/w3ctag/design-reviews.git",
    "ssh_url": "git@github.com:w3ctag/design-reviews.git",
    "clone_url": "https://github.com/w3ctag/design-reviews.git",
    "svn_url": "https://github.com/w3ctag/design-reviews",
    "homepage": null,
    "size": 268,
    "stargazers_count": 345,
    "watchers_count": 345,
    "language": "JavaScript",
    "has_issues": true,
    "has_projects": true,
    "has_downloads": true,
    "has_wiki": false,
    "has_pages": false,
    "has_discussions": true,
    "forks_count": 60,
    "mirror_url": null,
    "archived": false,
    "disabled": false,
    "open_issues_count": 51,
    "license": {
      "key": "cc0-1.0",
      "name": "Creative Commons Zero v1.0 Universal",
      "spdx_id": "CC0-1.0",
      "url": "https://api.github.com/licenses/cc0-1.0",
      "node_id": "MDc6TGljZW5zZTY="
    },
    "allow_forking": true,
    "is_template": false,
    "web_commit_signoff_required": false,
    "topics": [

    ],
    "visibility": "public",
    "forks": 60,
    "open_issues": 51,
    "watchers": 345,
    "default_branch": "main",
    "custom_properties": {

    }
  },
  "organization": {
    "login": "w3ctag",
    "id": 3874462,
    "node_id": "MDEyOk9yZ2FuaXphdGlvbjM4NzQ0NjI=",
    "url": "https://api.github.com/orgs/w3ctag",
    "repos_url": "https://api.github.com/orgs/w3ctag/repos",
    "events_url": "https://api.github.com/orgs/w3ctag/events",
    "hooks_url": "https://api.github.com/orgs/w3ctag/hooks",
    "issues_url": "https://api.github.com/orgs/w3ctag/issues",
    "members_url": "https://api.github.com/orgs/w3ctag/members{/member}",
    "public_members_url": "https://api.github.com/orgs/w3ctag/public_members{/member}",
    "avatar_url": "https://avatars.githubusercontent.com/u/3874462?v=4",
    "description": "The TAG  is a special working group within the @w3c, chartered (under the W3C Process Document) with stewardship of the web architecture."
  },
  "sender": {
    "login": "arnar",
    "id": 1498,
    "node_id": "MDQ6VXNlcjE0OTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1498?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/arnar",
    "html_url": "https://github.com/arnar",
    "followers_url": "https://api.github.com/users/arnar/followers",
    "following_url": "https://api.github.com/users/arnar/following{/other_user}",
    "gists_url": "https://api.github.com/users/arnar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/arnar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/arnar/subscriptions",
    "organizations_url": "https://api.github.com/users/arnar/orgs",
    "repos_url": "https://api.github.com/users/arnar/repos",
    "events_url": "https://api.github.com/users/arnar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/arnar/received_events",
    "type": "User",
    "user_view_type": "public",
    "site_admin": false
  },
  "installation": {
    "id": 55499709,
    "node_id": "MDIzOkludGVncmF0aW9uSW5zdGFsbGF0aW9uNTU0OTk3MDk="
  }
}
